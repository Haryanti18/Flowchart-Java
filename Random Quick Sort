import java.util.*;
import java.lang.Math;

class JavaApplication {
    private static Random random = new Random();
    
    public static void main(String[] args) {
        int n, i, j, k;
        
        n = 12;
        int[] data = new int[n];
        
        data[0] = 45;
        data[1] = 2;
        data[2] = 1;
        data[3] = 44;
        data[4] = 3;
        data[5] = 70;
        data[6] = 0;
        data[7] = -1;
        data[8] = 65;
        data[9] = 3;
        data[10] = 42;
        data[11] = 4;
        
        // Cetak Array Data
        System.out.println("[ ");
        for (i = 0 ; i <= n - 1 ; i += 1) {
            System.out.println("  " + data[i]);
        }
        System.out.println("  ]");
        
        // Memulai Quick Sort
        quickSort(data, 0, n - 1);
        
        // Cetak Hasil Sorting
        System.out.println("[ ");
        for (i = 0 ; i <= n - 1 ; i += 1) {
            System.out.println("  " + data[i]);
        }
        System.out.println("  ]");
    }

    private static int partisi(int[] data, int low, int high) {
        int indexPartisi;
        int pivot, i, j, temp, indexPivot, interval;
        
        interval = high - low;
        indexPivot = low + random.nextInt(interval);
        pivot = data[indexPivot];
        
        // set nilai pivot tetap diposisi high untuk memudahkan iterasi :)
        temp = data[indexPivot];
        data[indexPivot] = data[high];
        data[high] = temp;
        
        // memulai partisi Array
        i = low - 1;
        for (j = low ; j <= high - 1 ; j += 1) {
            if (data[j] < pivot) {
                i = i + 1;
                
                // tukar data pada index i dan j
                temp = data[i];
                data[i] = data[j];
                data[j] = temp;
            }
        }
        
        // tukar data pada index i+1 dan high
        temp = data[i + 1];
        data[i + 1] = data[high];
        data[high] = temp;
        indexPartisi = 1 + i;
        
        return indexPartisi;
    }

    private static void quickSort(int[] data, int low, int high) {
        if (low < high) {
            int indexPartisi;
            
            indexPartisi = partisi(data, low, high);
            quickSort(data, low, indexPartisi - 1);
            quickSort(data, indexPartisi + 1, high);
        }
    }
}
